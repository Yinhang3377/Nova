name: Set GitHub Pages to gh-pages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to publish from'
        required: false
        default: 'gh-pages'
      path:
        description: 'Folder to publish (root or docs)'
        required: false
        default: '/'

permissions:
  contents: write
  pages: write

jobs:
  set-pages:
    runs-on: ubuntu-latest
    name: Set Pages Source
    steps:
      - name: Check out repository (for context)
        uses: actions/checkout@v4

      - name: Set GitHub Pages source to branch (REST API)
        run: |
          # Determine inputs (workflow_dispatch inputs are available under github.event.inputs)
          branch="${{ github.event.inputs.branch }}"
          path="${{ github.event.inputs.path }}"
          if [ -z "$branch" ]; then branch="gh-pages"; fi
          if [ -z "$path" ]; then path="/"; fi
          owner_repo="${GITHUB_REPOSITORY}"
          owner="${owner_repo%%/*}"
          repo="${owner_repo##*/}"
          echo "Setting Pages source for $owner/$repo -> branch=$branch path=$path"

          # Call the Pages REST API and capture HTTP status and body for debugging
          # Prefer a user-provided PAT stored in the repository secret PAGES_TOKEN (recommended for orgs/SAML/SSO). Fallback to GITHUB_TOKEN.
          if [ -n "${PAGES_TOKEN}" ]; then
            auth_header="Authorization: Bearer ${PAGES_TOKEN}"
            echo "Using PAGES_TOKEN secret for API auth"
          else
            auth_header="Authorization: Bearer ${GITHUB_TOKEN}"
            echo "Using GITHUB_TOKEN for API auth (may be blocked by org SSO/restrictions)"
          fi

          resp=$(curl -sS -w "\n%{http_code}" -X PUT \
            -H "$auth_header" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$owner/$repo/pages \
            -d "{ \"source\": { \"branch\": \"$branch\", \"path\": \"$path\" } }")

          body=$(echo "$resp" | sed '$d')
          code=$(echo "$resp" | tail -n1)
          echo "HTTP status: $code"
          echo "Response body:\n$body"

          if [ "$code" -ge 200 ] && [ "$code" -lt 300 ]; then
            echo "Pages updated successfully"
            exit 0
          else
            echo "Pages API returned $code"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Optionally provide a personal access token with 'repo' and 'workflow' or 'admin:repo_hook' scope
          PAGES_TOKEN: ${{ secrets.PAGES_TOKEN }}

      - name: Print info
        run: |
          echo "Pages source updated. Check repository Settings â†’ Pages to confirm."
